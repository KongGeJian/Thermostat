/*
*********************************************************************************************************
*                                        BOARD SUPPORT PACKAGE
*
* Name    : 焊接
* Version : V1.0
* Author  : 空格键
*********************************************************************************************************
*/

#ifndef __BSP_WELDER_H__
#define __BSP_WELDER_H__

/*
*********************************************************************************************************
*                                             INCLUDE FILES
*********************************************************************************************************
*/

#include "bsp.h"


/*
*********************************************************************************************************
*                                               DEFINE
*********************************************************************************************************
*/

#define PD_WIDTH_MAX  99    //最大脉宽
#define PD_P_WIDTH_MIN  1   //最小正脉宽
#define PD_N_WIDTH_MIN  5   //最小负脉宽
#define PD_NUM_MAX    99    //最大次数
#define PD_NUM_MIN    1     //最小次数
//脉冲驱动 (Pulse drive)
typedef struct
{
    u8 pwidth;      //正脉冲宽度
    u8 nwidth;      //负脉冲宽度
    u8 num;         //脉冲次数
} PD_TYP;

//焊接状态
typedef enum
{
    UNTOUCHED = 1,  //1-未接触
    JUST_TOUCHED,   //2-刚接触
    WORKING,        //3-工作中
    JUST_FINISHED,  //4-刚工作完
    LIFTING,        //5-待抬起
    JUST_LIFTED,    //6-刚抬起
} WELDER_STATE_E_TYP;

#define PD_GEAR_MAX  30 //最大档位
#define PD_GEAR_MIN  1  //最小档位

//定义档位
static const PD_TYP code PD_GEAR[] = {
    { 0,  0,  0}, // -
    { 3,  5,  3}, // 1 负脉宽最小为5
    { 6,  6,  6}, // 2
    { 9,  9,  9}, // 3
    {12, 12, 12}, // 4
    {15, 15, 15}, // 5
    {18, 18, 18}, // 6
    {21, 21, 21}, // 7
    {24, 24, 24}, // 8
    {27, 27, 27}, // 9
    {30, 30, 30}, // 10
    {33, 33, 33}, // 11
    {36, 36, 36}, // 12
    {39, 39, 39}, // 13
    {42, 42, 42}, // 14
    {45, 45, 45}, // 15
    {48, 48, 48}, // 16
    {51, 51, 51}, // 17
    {54, 54, 54}, // 18
    {57, 57, 57}, // 19
    {60, 60, 60}, // 20
    {63, 63, 63}, // 21
    {66, 66, 66}, // 22
    {69, 69, 69}, // 23
    {72, 72, 72}, // 24
    {75, 75, 75}, // 25
    {78, 78, 78}, // 26
    {81, 81, 81}, // 27
    {84, 84, 84}, // 28
    {87, 87, 87}, // 29
    {90, 90, 90}, // 30
};



/*
*********************************************************************************************************
*                                             FUNCTION
*********************************************************************************************************
*/

extern void                BSP_WELDER_Init(void) large;

extern WELDER_STATE_E_TYP  BSP_WELDER_State() large;
extern void                BSP_WELDER_Start(PD_TYP *pd) large;
extern void                BSP_WELDER_End() large;
extern boolean             BSP_WELDER_StateIsChange(WELDER_STATE_E_TYP curr) large;


#endif
/***********************************************END*****************************************************/
